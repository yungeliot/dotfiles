(()=>{"use strict";self.onmessage=async e=>{const{url:s,timeout:t}=e.data.payload,a={connected:!1},o=new AbortController,c=o.signal,n=setTimeout((()=>{a.message=`Aborted by timeout: ${t} ms`,o.abort(),self.postMessage(a)}),t);try{const e=await fetch(s,{signal:c,headers:{pragma:"no-cache","cache-control":"no-cache, no-store"}});clearTimeout(n),a.connected=200===e.status,a.message=`Verification successful. Status: ${e.status}, StatusText: ${e.statusText}, Type: ${e.headers.get("content-type")}`,self.postMessage(a)}catch(e){clearTimeout(n),a.message=`Verification failed. Error: ${JSON.stringify(e)}, Message: ${e.message}, Stack: ${e.stack}`,self.postMessage(a)}}})();